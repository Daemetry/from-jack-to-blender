class ShapeProvider{
    function ExtendedArray getAllShapes(){
        var ExtendedArray result;
        var Array resultItems;
        
        let result = ExtendedArray.new(5);
        let resultItems = result.getItems();
        let result = ExtendedArray.new(5);
        let resultItems = result.getItems();

        let resultItems[0] = ShapeProvider.getCubeShape();
        let resultItems[1] = ShapeProvider.getRectangle();
        let resultItems[2] = ShapeProvider.getPyramid();
        let resultItems[3] = ShapeProvider.getPrism3sides();
        let resultItems[4] = ShapeProvider.getPrism6sides(2);
        let resultItems[0] = ShapeProvider.getCubeShape();
        let resultItems[1] = ShapeProvider.getRectangle();
        let resultItems[2] = ShapeProvider.getPyramid();
        let resultItems[3] = ShapeProvider.getPrism3sides();
        let resultItems[4] = ShapeProvider.getPrism6sides(2);

        return result;
    }

    function Shape getCubeShape(){
        var PointVector3D p000, p010, p001, p011, p100, p101, p111, p110;
        var Array segments;

        let segments = Array.new(12);

        let p000 = PointVector3D.newInt(0, 0, 0);
        let p010 = PointVector3D.newInt(0, 1, 0);
        let p100 = PointVector3D.newInt(1, 0, 0);
        let p110 = PointVector3D.newInt(1, 1, 0);

        let p100 = PointVector3D.newInt(1, 0, 0);
        let p110 = PointVector3D.newInt(1, 1, 0);

        let p001 = PointVector3D.newInt(0, 0, 1);
        let p011 = PointVector3D.newInt(0, 1, 1);
        let p101 = PointVector3D.newInt(1, 0, 1);
        let p111 = PointVector3D.newInt(1, 1, 1);

        let segments[0] = Segment.new(p000, p010);
        let segments[1] = Segment.new(p000, p001);
        let segments[2] = Segment.new(p010, p011);
        let segments[3] = Segment.new(p001, p011);
        let segments[4] = Segment.new(p001, p101);
        let segments[5] = Segment.new(p101, p111);
        let segments[6] = Segment.new(p111, p110);
        let segments[7] = Segment.new(p111, p011);
        let segments[8] = Segment.new(p010, p110);
        let segments[9] = Segment.new(p000, p100);
        let segments[10] = Segment.new(p100, p110);
        let segments[11] = Segment.new(p100, p101);

        return Shape.new(segments, 12, "Cube");
    } 
    
    function Shape getPyramid(){
        var PointVector3D a, b, c, d, e;
        var Fraction x, y, z;
        var Segment ab, bc, cd, ad;
        var Segment ae, be, ce, de;
        var Array segments;

        let segments = Array.new(8);

        // vertices
        let x = Fraction.new(0, 100);
        let y = Fraction.new(0, 100);
        let z = Fraction.new(100, 100);

        let a = PointVector3D.new(x, y, z);

        let x = Fraction.new(100, 100);
        let y = Fraction.new(0, 100);
        let z = Fraction.new(100, 100);

        let b = PointVector3D.new(x, y, z);

        let x = Fraction.new(100, 100);
        let y = Fraction.new(0, 100);
        let z = Fraction.new(0, 100);

        let c = PointVector3D.new(x, y, z);
        
        let x = Fraction.new(0, 100);
        let y = Fraction.new(0, 100);
        let z = Fraction.new(0, 100);

        let d = PointVector3D.new(x, y, z);

        let x = Fraction.new(200,100);
        let y = Fraction.new(150,100);
        let z = Fraction.new(50, 100);

        let e = PointVector3D.new(x, y, z);

        // edges

        let segments[0] = Segment.new(a,b);
        let segments[1] = Segment.new(b,c);
        let segments[2] = Segment.new(c,d);
        let segments[3] = Segment.new(a,d);
        
        let segments[4] = Segment.new(a,e);
        let segments[5] = Segment.new(b,e);
        let segments[6] = Segment.new(c,e);
        let segments[7] = Segment.new(d,e);

        return Shape.new(segments, 8, "Pyramid");
    }

    function Shape getRectangle(){
        var PointVector3D p000, p010, p100, p110;
        var PointVector3D p002, p012,  p102, p112;
        var Array segments;

        let segments = Array.new(12);

        let p000 = PointVector3D.newInt(0, 0, 0);
        let p010 = PointVector3D.newInt(0, 1, 0);
        let p100 = PointVector3D.newInt(1, 0, 0);
        let p110 = PointVector3D.newInt(1, 1, 0);
        

        let p002 = PointVector3D.newInt(0, 0, 2);
        let p012 = PointVector3D.newInt(0, 1, 2);
        let p102 = PointVector3D.newInt(1, 0, 2);
        let p112 = PointVector3D.newInt(1, 1, 2);
        

        let segments[0] = Segment.new(p000, p010);
        let segments[1] = Segment.new(p000, p002);
        let segments[2] = Segment.new(p010, p012);
        let segments[3] = Segment.new(p002, p012);
        let segments[4] = Segment.new(p002, p102);
        let segments[5] = Segment.new(p102, p112);
        let segments[6] = Segment.new(p112, p110);
        let segments[7] = Segment.new(p112, p012);
        let segments[8] = Segment.new(p010, p110);
        let segments[9] = Segment.new(p000, p100);
        let segments[10] = Segment.new(p100, p110);
        let segments[11] = Segment.new(p100, p102);

        return Shape.new(segments, 12, "Rectangle");
    } 

    function Shape getPrism3sides(){
        var Array segments;
        var PointVector3D p1, p2, p3, p4, p5, p6;

        let segments = Array.new(9);

        let p1 = PointVector3D.newInt(0, 0, 2);
        let p2 = PointVector3D.newInt(0, 2, 2);
        let p3 = PointVector3D.newInt(2, 0, 2);

        let p4 = PointVector3D.newInt(0, 0, 0);
        let p5 = PointVector3D.newInt(0, 2, 0);
        let p6 = PointVector3D.newInt(2, 0, 0);

        let segments[0] = Segment.new(p1, p2);
        let segments[1] = Segment.new(p2, p3);
        let segments[2] = Segment.new(p3, p1);
        let segments[3] = Segment.new(p4, p5);
        let segments[4] = Segment.new(p5, p6);
        let segments[5] = Segment.new(p6, p4);
        let segments[6] = Segment.new(p1, p4);
        let segments[7] = Segment.new(p2, p5);
        let segments[8] = Segment.new(p3, p6);

        return Shape.new(segments, 9, "3-side Prism");
    }

    function Shape getPrism6sides(int height){
        var Array segments;
        var PointVector3D p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12;
        var Fraction zeroFraction, oneFraction, twoFraction;

        let segments = Array.new(18);
        
        let p1 = PointVector3D.newInt(1, 0, 0);
        let p2 = PointVector3D.newInt(3, 0, 0);
        let p3 = PointVector3D.newInt(4, 0, 1);
        let p1 = PointVector3D.newInt(1, 0, 0);
        let p2 = PointVector3D.newInt(3, 0, 0);
        let p3 = PointVector3D.newInt(4, 0, 1);

        let p4 = PointVector3D.newInt(3, 0, 2);
        let p5 = PointVector3D.newInt(1, 0, 2);
        let p6 = PointVector3D.newInt(0, 0, 1);
        let p4 = PointVector3D.newInt(3, 0, 2);
        let p5 = PointVector3D.newInt(1, 0, 2);
        let p6 = PointVector3D.newInt(0, 0, 1);

        
        let p7 = PointVector3D.newInt(1, height, 0);
        let p8 = PointVector3D.newInt(3, height, 0);
        let p9 = PointVector3D.newInt(4, height, 1);

        let p10 = PointVector3D.newInt(3, height, 2);
        let p11 = PointVector3D.newInt(1, height, 2);
        let p12 = PointVector3D.newInt(0, height, 1);
        
        let p7 = PointVector3D.newInt(1, height, 0);
        let p8 = PointVector3D.newInt(3, height, 0);
        let p9 = PointVector3D.newInt(4, height, 1);

        let p10 = PointVector3D.newInt(3, height, 2);
        let p11 = PointVector3D.newInt(1, height, 2);
        let p12 = PointVector3D.newInt(0, height, 1);

        let segments[0] = Segment.new(p1, p2);
        let segments[1] = Segment.new(p2, p3);
        let segments[2] = Segment.new(p3, p4);
        let segments[3] = Segment.new(p4, p5);
        let segments[4] = Segment.new(p5, p6);
        let segments[5] = Segment.new(p6, p1);
        let segments[6] = Segment.new(p7, p8);
        let segments[7] = Segment.new(p8, p9);
        let segments[8] = Segment.new(p9, p10);
        let segments[9] = Segment.new(p10, p11);
        let segments[10] = Segment.new(p11, p12);
        let segments[11] = Segment.new(p12, p7);
        let segments[12] = Segment.new(p1, p7);
        let segments[13] = Segment.new(p2, p8);
        let segments[14] = Segment.new(p3, p9);
        let segments[15] = Segment.new(p4, p10);
        let segments[16] = Segment.new(p5, p11);
        let segments[17] = Segment.new(p6, p12);
        let segments[0] = Segment.new(p1, p2);
        let segments[1] = Segment.new(p2, p3);
        let segments[2] = Segment.new(p3, p4);
        let segments[3] = Segment.new(p4, p5);
        let segments[4] = Segment.new(p5, p6);
        let segments[5] = Segment.new(p6, p1);
        let segments[6] = Segment.new(p7, p8);
        let segments[7] = Segment.new(p8, p9);
        let segments[8] = Segment.new(p9, p10);
        let segments[9] = Segment.new(p10, p11);
        let segments[10] = Segment.new(p11, p12);
        let segments[11] = Segment.new(p12, p7);
        let segments[12] = Segment.new(p1, p7);
        let segments[13] = Segment.new(p2, p8);
        let segments[14] = Segment.new(p3, p9);
        let segments[15] = Segment.new(p4, p10);
        let segments[16] = Segment.new(p5, p11);
        let segments[17] = Segment.new(p6, p12);

        return Shape.new(segments, 18, "6-side Prism");
    }
}