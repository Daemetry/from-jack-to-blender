class Render{

    constructor Render new(){
        return this;
    }

    method void renderShape(Shape shape, int cameraYPos){
        var int i;
        var PointVector3D camera, tempPoint;
        var PointVector3D screenSide, screenBottom, screenStart, screenNormal;
        var PointVector3D ray1, ray2, screenPoint1, screenPoint2;
        var Fraction numerator, denominator1, denominator2, t1, t2;
        var Fraction coordX1, coordY1, coordX2, coordY2, tempFrac, lengthSqr;
        var Array sides;
        var Segment side;
        // var Matrix4x4 rotationXmatrix, rotationZmatrix;

        do Screen.setColor(true);
        let camera = PointVector3D.new( Fraction.newUnreduced(-3, 1), Fraction.newUnreduced(cameraYPos, 1), Fraction.getDefault() );

        let screenStart = PointVector3D.new( Fraction.newUnreduced(-2, 1), Fraction.newUnreduced(2, 1), Fraction.newUnreduced(-1, 1) );
        let screenBottom = PointVector3D.new( Fraction.getDefault(), Fraction.newUnreduced(-4, 1), Fraction.getDefault() );
        let screenSide = PointVector3D.new( Fraction.getDefault(), Fraction.getDefault(), Fraction.newUnreduced(2, 1) );
        
        let screenNormal = screenBottom .crossProduct (screenSide);
        let tempPoint = screenStart .vectorSub (camera);
        let numerator = tempPoint .dotProduct (screenNormal);

        // do tempPoint.dispose();
    
        let sides = shape.getSegments();
        let i = 0;
        // let rotationXmatrix = Matrix4x4.getRotationXMatrix(tick);
        // let rotationZmatrix = Matrix4x4.getRotationZMatrix(tick);

        while (i < shape.getSegmentsCount())
        {
            let side = sides[i];

            // Проводим прямую, соединяющую камеру и точку отрезка
            // и находим её проекцию на плоскость экрана.

            // let ray1 = Matrix4x4.multiplyMatrixVector(side.getPoint1(), rotationXmatrix);
            // let ray1 = Matrix4x4.multiplyMatrixVector(ray1, rotationZmatrix);
            
            let ray1 = side.getPoint1();
            let ray1 = ray1 .vectorSub (camera);
            let denominator1 = ray1 .dotProduct (screenNormal);

            // let ray2 = Matrix4x4.multiplyMatrixVector(side.getPoint2(), rotationXmatrix);
            // let ray2 = Matrix4x4.multiplyMatrixVector(ray2, rotationZmatrix);

            let ray2 = side.getPoint2();
            let ray2 = ray2 .vectorSub (camera);
            let denominator2 = ray2 .dotProduct (screenNormal);

            let t1 = numerator .div (denominator1);
            let t2 = numerator .div (denominator2);
            do denominator1.dispose(); do denominator2.dispose();

            let tempPoint = ray1 .fracMult (t1);
            let screenPoint1 = camera .vectorAdd (tempPoint);
            do tempPoint.dispose();
            let tempPoint = screenPoint1;
            let screenPoint1 = tempPoint .vectorSub (screenStart);
            do tempPoint.dispose();
            do t1.dispose();

            let tempPoint = ray2 .fracMult (t2);
            let screenPoint2 = camera .vectorAdd (tempPoint);
            do tempPoint.dispose();
            let tempPoint = screenPoint2;
            let screenPoint2 = tempPoint .vectorSub (screenStart);
            do tempPoint.dispose();
            do t2.dispose();

            // Далее получаем координаты полученных точек в базисе сторон экрана,
            // чтобы проверить, лежат ли они в пределах экрана и получить соответствующие им пиксели
            let lengthSqr = screenBottom .dotProduct (screenBottom);
            
            let tempFrac = screenBottom .dotProduct (screenPoint1);
            let coordX1 = tempFrac .div (lengthSqr);
            do tempFrac.dispose();

            let tempFrac = screenBottom .dotProduct (screenPoint2);
            let coordX2 = tempFrac .div (lengthSqr);
            do tempFrac.dispose();

            do lengthSqr.dispose();
            let lengthSqr = screenSide .dotProduct (screenSide);

            let tempFrac = screenSide .dotProduct (screenPoint1);
            let coordY1 = tempFrac .div (lengthSqr);
            do tempFrac.dispose();

            let tempFrac = screenSide .dotProduct (screenPoint2);
            let coordY2 = tempFrac .div (lengthSqr);
            do tempFrac.dispose();

            do lengthSqr.dispose();

            // проверка на то, лежит ли точка в экране, производится через смешанное произведение
            
            // пока обойдёмся без проверки

            let tempFrac = coordX1;
            let coordX1 = tempFrac .multInt (512);
            do tempFrac.dispose();

            let tempFrac = coordX2;
            let coordX2 = tempFrac .multInt (512);
            do tempFrac.dispose();

            let tempFrac = coordY1;
            let coordY1 = tempFrac .multInt (256);
            do tempFrac.dispose();

            let tempFrac = coordY2;
            let coordY2 = tempFrac .multInt (256);
            do tempFrac.dispose();

            do Screen.drawLine( 
                coordX1.toInt(), coordY1.toInt(),
                coordX2.toInt(), coordY2.toInt());

            do ray1.dispose(); do ray2.dispose();
            do screenPoint1.dispose(); do screenPoint2.dispose();
            do coordX1.dispose(); do coordX2.dispose();
            do coordY1.dispose(); do coordY2.dispose();

            let i = i + 1;
        }
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}